package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"

	"github.com/teste-transfeera/internal/entity"
	"github.com/teste-transfeera/internal/usecase"
)

// CreateReceiver is the resolver for the createReceiver field.
func (r *mutationResolver) CreateReceiver(ctx context.Context, input entity.NewReceiver) (*entity.Receiver, error) {
	usecaseInput := &usecase.CreateReceiverInput{
		Name:       input.Name,
		Email:      input.Email,
		Identifier: input.Identifier,
		PixKeyType: input.PixKeyType,
		PixKey:     input.PixKey,
	}
	return r.ReceiverUseCases.Create(usecaseInput)
}

// Receivers is the resolver for the receivers field.
func (r *queryResolver) Receivers(ctx context.Context) ([]entity.Receiver, error) {
	receivers, err := r.ReceiverUseCases.List()
	if err != nil {
		fmt.Println("ERR usecase ", err)
		return nil, err
	}

	fmt.Println("receivers ", receivers)
	return receivers, err
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
